# This workflow will build a package using Maven and run sonar scan on it

name: Maven Packaging and Sonar Analysis

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'zulu'

    - name: Build with Maven
      run: mvn clean -B package --file pom.xml
        
  check_sonar_configured:
    runs-on: ubuntu-latest
    steps:
      - name: check_sonar_configured
        run: |
          echo "Checking if sonar is configured: ${{ env.SONAR_CONFIGURED }}"
    env:
      SONAR_CONFIGURED: ${{ secrets.SONAR_TOKEN != '' }}
    outputs:
      sonar_configured: ${{ env.SONAR_CONFIGURED }}


  analysis_with_sonar_cloud:
    needs: [check_sonar_configured]
    # No need to run if we cannot use the sonar token
    if: >-
      needs.check_sonar_configured.outputs.sonar_configured == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: read

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'zulu'
          server-id: github
          settings-path: ${{ github.workspace }}
          
      - name: Analyze with SonarCloud
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn --update-snapshots verify \
          org.sonarsource.scanner.maven:sonar-maven-plugin:sonar \
          -Dsonar.projectKey=eclipse-ecsp_utils -Dsonar.organization=eclipse-ecsp \
          -Dcheckstyle.skip -Dpmd.skip=true